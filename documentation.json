{
    "pipes": [],
    "interfaces": [
        {
            "name": "Catalog",
            "id": "interface-Catalog-9ff8d47fbb956bb57f4d46d215965a798b8b4c29f588719bd427790acf1ab12a250e0653d911081c1a69c11e49ab1f432db36b60efee51da7c2c6ac07af45409",
            "file": "src/app/project/web/state/catalog/catalog.reduser.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer } from '@ngrx/store';\r\n\r\nexport interface ICatalog {\r\n  link: number;\r\n  name: string;\r\n}\r\n\r\nexport interface Catalog {\r\n product: ICatalog[];\r\n}\r\n\r\nexport const initialState: Catalog = {\r\n  product: [\r\n    { link: 1, name: 'category1'},\r\n    { link: 2, name: 'category2'},\r\n    { link: 3, name: 'category3'},\r\n    { link: 4, name: 'category4'},\r\n  ]\r\n\r\n};\r\n\r\nexport const catalogReducer = createReducer(\r\n  initialState,\r\n);",
            "properties": [
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICatalog[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ICatalog",
            "id": "interface-ICatalog-9ff8d47fbb956bb57f4d46d215965a798b8b4c29f588719bd427790acf1ab12a250e0653d911081c1a69c11e49ab1f432db36b60efee51da7c2c6ac07af45409",
            "file": "src/app/project/web/state/catalog/catalog.reduser.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer } from '@ngrx/store';\r\n\r\nexport interface ICatalog {\r\n  link: number;\r\n  name: string;\r\n}\r\n\r\nexport interface Catalog {\r\n product: ICatalog[];\r\n}\r\n\r\nexport const initialState: Catalog = {\r\n  product: [\r\n    { link: 1, name: 'category1'},\r\n    { link: 2, name: 'category2'},\r\n    { link: 3, name: 'category3'},\r\n    { link: 4, name: 'category4'},\r\n  ]\r\n\r\n};\r\n\r\nexport const catalogReducer = createReducer(\r\n  initialState,\r\n);",
            "properties": [
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IProduct",
            "id": "interface-IProduct-20e4564b79939adf96f51d2bf809c035fc558ef3a864b829958b0ac17c6fcaaa46eea80d26a934693dfa5a884700553c6eec43c41c685b31ada444150a6bbc49",
            "file": "src/app/project/web/state/products/products.reduser.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer } from '@ngrx/store';\r\n\r\nexport interface IProduct {\r\n  // определите свои свойства состояния здесь\r\n  id: number;\r\n  name: string;\r\n  cost: number;\r\n  description: string;\r\n  image: string;\r\n}\r\n\r\nexport interface Products {\r\n product1: IProduct[];\r\n product2: IProduct[];\r\n}\r\n\r\nexport const initialState: Products = {\r\n  product1: [\r\n    { id: 1, name: 'Table', cost: 12, description: 'description1', image: 'assets/img/1.jpg'},\r\n    { id: 2, name: 'Chair', cost: 12, description: 'description2', image: 'assets/img/2.jpg'},\r\n    { id: 3, name: 'prod3', cost: 12, description: 'description3', image: 'assets/img/1.jpg'},\r\n    { id: 4, name: 'prod4', cost: 12, description: 'description4', image: 'assets/img/1.jpg'},\r\n  ],\r\n\r\n  product2: [\r\n    { id: 1, name: 'Table', cost: 12, description: 'description1', image: 'assets/img/1.jpg'},\r\n    { id: 2, name: 'Chair', cost: 12, description: 'description2', image: 'assets/img/2.jpg'},\r\n    { id: 3, name: 'prod3', cost: 12, description: 'description3', image: 'assets/img/1.jpg'},\r\n    { id: 4, name: 'prod4', cost: 12, description: 'description4', image: 'assets/img/1.jpg'},\r\n  ]\r\n};\r\n\r\nexport const productsReducer = createReducer(\r\n  initialState,\r\n);",
            "properties": [
                {
                    "name": "cost",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Products",
            "id": "interface-Products-20e4564b79939adf96f51d2bf809c035fc558ef3a864b829958b0ac17c6fcaaa46eea80d26a934693dfa5a884700553c6eec43c41c685b31ada444150a6bbc49",
            "file": "src/app/project/web/state/products/products.reduser.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer } from '@ngrx/store';\r\n\r\nexport interface IProduct {\r\n  // определите свои свойства состояния здесь\r\n  id: number;\r\n  name: string;\r\n  cost: number;\r\n  description: string;\r\n  image: string;\r\n}\r\n\r\nexport interface Products {\r\n product1: IProduct[];\r\n product2: IProduct[];\r\n}\r\n\r\nexport const initialState: Products = {\r\n  product1: [\r\n    { id: 1, name: 'Table', cost: 12, description: 'description1', image: 'assets/img/1.jpg'},\r\n    { id: 2, name: 'Chair', cost: 12, description: 'description2', image: 'assets/img/2.jpg'},\r\n    { id: 3, name: 'prod3', cost: 12, description: 'description3', image: 'assets/img/1.jpg'},\r\n    { id: 4, name: 'prod4', cost: 12, description: 'description4', image: 'assets/img/1.jpg'},\r\n  ],\r\n\r\n  product2: [\r\n    { id: 1, name: 'Table', cost: 12, description: 'description1', image: 'assets/img/1.jpg'},\r\n    { id: 2, name: 'Chair', cost: 12, description: 'description2', image: 'assets/img/2.jpg'},\r\n    { id: 3, name: 'prod3', cost: 12, description: 'description3', image: 'assets/img/1.jpg'},\r\n    { id: 4, name: 'prod4', cost: 12, description: 'description4', image: 'assets/img/1.jpg'},\r\n  ]\r\n};\r\n\r\nexport const productsReducer = createReducer(\r\n  initialState,\r\n);",
            "properties": [
                {
                    "name": "product1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "product2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IProduct[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-23c11020a2831beb3fa02ee911a75b64009c31bb46f73a01145c2560cb13b7f7e641105b678bd8fb01a5a199117001f3da4a78351d29d85d213ed7b82982091f",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-946767b6454dd21fcf37b4c7cc0deb35fbd050f755c6f0efec5a23bed888b1d24159236f02cca3e4f9185390c6535850dbdcbdfb17e0b52e74e8d9b187c7ba37",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'dz'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "LayoutContainer"
                },
                {
                    "name": "NavContainerComponent",
                    "type": "component"
                },
                {
                    "name": "CardListContainer"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { LayoutContainer } from './project/web/container/layout-container/layout-container.component';\r\nimport { NavContainerComponent } from './project/web/container/nav-conteiner.component/nav-container.component';\r\nimport { CardListContainer } from './project/web/container/card-container/card-container.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [\r\n    RouterOutlet,\r\n    LayoutContainer,\r\n    NavContainerComponent,\r\n    CardListContainer,\r\n  ],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent {\r\n  title = 'dz';\r\n\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"body\">\r\n    <nav-container></nav-container>\r\n    <overlay-container class=\"main\">\r\n\r\n    </overlay-container>\r\n</div>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-c3bd323da00016e22e16a3a7d43440094eeceddea5e6076a399bcaba62f8e742efe65e543735e36f9ea1bed026ab8e3c8fb60482667ae55ec324f8adfe79b9f7",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 837,
                            "end": 851,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 838,
                                "end": 846,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-30edf4e10848186c49578fa4111c9c9624d0706d26d22b726dbf86e9a694885c838ca8282a05db99050ee49208c3b66593c15a24d6c46a02594408f2d2b62f05",
            "file": "src/app/project/ui/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "card-component",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "card",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "IProduct",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { IProduct } from '../../../web/state/products/products.reduser';\r\n\r\n@Component({\r\n  selector: 'card-component',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './card.component.html',\r\n  styleUrl: './card.component.scss'\r\n})\r\nexport class CardComponent {\r\n  @Input() card!: IProduct;\r\n}\r\n",
            "styleUrl": "./card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container\">\r\n  <img class=\"img\" src={{card.image}} alt=\"Image\">\r\n  <div class=\"content\">\r\n    <h2 class=\"title\">{{card.name}}</h2>\r\n    <div class=\"description-cost\">\r\n      <p class=\"description\">{{card.description}}</p>\r\n      <p class=\"cost\">{{card.cost}}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardListContainer",
            "id": "component-CardListContainer-1914d49fef442b598fea0a6c177c7447a2cb20e3c356b0c75eb3907c1d3d3a18dfc04a534f4a557e8202c1293cac8c6d9c37d3147a9f0602a652374163011fb6",
            "file": "src/app/project/web/container/card-container/card-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cardListContainer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card-container.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "products$",
                    "defaultValue": "this.store$.select(getProductsList1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatGridListModule",
                    "type": "module"
                },
                {
                    "name": "CardComponent",
                    "type": "component"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output } from '@angular/core';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { Store } from '@ngrx/store';\r\nimport { Products } from '../../state/products/products.reduser';\r\nimport { getProductsList1 } from '../../state/products/products.selector';\r\nimport { CardComponent } from '../../../ui/components/card/card.component';\r\nimport { AsyncPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'cardListContainer',\r\n  standalone: true,\r\n  imports: [MatGridListModule, CardComponent, AsyncPipe],\r\n  templateUrl: './card-container.component.html',\r\n  styleUrl: './card-container.component.scss'\r\n})\r\nexport class CardListContainer {\r\n\r\n  products$ = this.store$.select(getProductsList1);\r\n\r\n  constructor(private store$: Store<Products>) {\r\n  }\r\n}\r\n",
            "styleUrl": "./card-container.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store$",
                        "type": "Store<Products>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "store$",
                        "type": "Store<Products>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "@for (card of (products$|async); track card) {\r\n<card-component [card]=\"card\"></card-component>\r\n} @empty {\r\n    Empty list of users\r\n  }"
        },
        {
            "name": "CatalogButtonContainer",
            "id": "component-CatalogButtonContainer-c2c1f23c2383b77436a15d2148fe6f7504db6a714d6bf56386483cab1057a5c47b3f3acefd5af115e394e2c3889b2351e597935f8e21fda07b463bc1478927e8",
            "file": "src/app/project/web/container/catalog-button/catalog-button-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "catalog-button-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./catalog-button-container.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "catalogList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ICatalog[] | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatButton"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport {MatButton} from \"@angular/material/button\";\r\nimport {ICatalog} from \"../../state/catalog/catalog.reduser\";\r\n\r\n@Component({\r\n  selector: 'catalog-button-container',\r\n  standalone: true,\r\n  imports: [\r\n    MatButton\r\n  ],\r\n  templateUrl: './catalog-button-container.component.html',\r\n  styleUrl: './catalog-button-container.component.scss'\r\n})\r\nexport class CatalogButtonContainer {\r\n  @Input() catalogList: ICatalog[]|null = [];\r\n}\r\n",
            "styleUrl": "./catalog-button-container.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@for (product of catalogList; track product) {\r\n  <button mat-button color=\"primary\" >{{ product.name }}</button><br>\r\n} @empty {\r\n  Empty list of users\r\n}\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-07f894be6f38e12f30e1e7e5d9e999c27c78ce2f0be03c15c8c5f39207229e147892a2fd1fdb54e935c4f04f03c2162e39a22c28cdc64e027ea15824ddf0f3c9",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ButtonComponent } from './button.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  standalone: true,\r\n  imports: [CommonModule, ButtonComponent],\r\n  template: `<header>\r\n    <div class=\"storybook-header\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user.name }}</b\r\n            >!\r\n          </span>\r\n          <storybook-button\r\n            *ngIf=\"user\"\r\n            size=\"small\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></storybook-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></storybook-button>\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            [primary]=\"true\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></storybook-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.storybook-header svg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header h1 {\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header button + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.storybook-header .welcome {\r\n  color: #333;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-4d386576fbe67a2cadda2207aefa77739f1988163f0aff0c2f82d580226a3fd45cf6d01ee31d5ee590bbf9bef50778de7c2c715560ed235813da934a1f07fec4",
            "file": "src/app/project/ui/components/layout/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatSidenavModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input} from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { ICatalog } from '../../../web/state/catalog/catalog.reduser';\r\n\r\n@Component({\r\n  selector: 'layout',\r\n  standalone: true,\r\n  imports: [MatButtonModule, MatSidenavModule],\r\n  templateUrl: './layout.component.html',\r\n  styleUrl: './layout.component.scss'\r\n})\r\nexport class LayoutComponent {\r\n\r\n}\r\n",
            "styleUrl": "./layout.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-drawer-container class=\"example-container\" >\r\n    <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\">\r\n      <ng-content select=[catalogButtolnList]></ng-content>\r\n    </mat-drawer>\r\n    <div class=\"example-sidenav-content\">\r\n      <button type=\"button\" mat-button (click)=\"drawer.toggle()\">\r\n        Catalog\r\n      </button>\r\n    </div>\r\n    <ng-content select=[cardList]></ng-content>\r\n</mat-drawer-container>\r\n"
        },
        {
            "name": "LayoutContainer",
            "id": "component-LayoutContainer-ac5378d31f9e8a486d8ad48a1da4fd1c935766da8e4adc9b565ba4d69763f02934615c3145f772b7a0e026a441cdbae7322b86bfa7a4804fe26a7dddfb1b6488",
            "file": "src/app/project/web/container/layout-container/layout-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "layout-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./layout-container.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "catalogList$",
                    "defaultValue": "this.store$.select(getCatalog)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "LayoutComponent",
                    "type": "component"
                },
                {
                    "name": "CardListContainer"
                },
                {
                    "name": "CatalogButtonContainer"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { Catalog } from '../../state/catalog/catalog.reduser';\r\nimport { Store } from '@ngrx/store';\r\nimport { CommonModule } from '@angular/common';\r\nimport { getCatalog } from '../../state/catalog/catalog.selector';\r\nimport { LayoutComponent } from '../../../ui/components/layout/layout.component';\r\nimport { CardListContainer } from '../card-container/card-container.component';\r\nimport { CatalogButtonContainer } from \"../catalog-button/catalog-button-container.component\";\r\n\r\n@Component({\r\n  selector: 'layout-container',\r\n  standalone: true,\r\n  imports: [CommonModule, LayoutComponent, CardListContainer, CatalogButtonContainer],\r\n  templateUrl: './layout-container.component.html',\r\n  styleUrl: './layout-container.component.scss'\r\n})\r\nexport class LayoutContainer {\r\n  catalogList$ = this.store$.select(getCatalog);\r\n\r\n  constructor(private store$: Store<Catalog>) {\r\n  }\r\n}\r\n",
            "styleUrl": "./layout-container.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store$",
                        "type": "Store<Catalog>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "store$",
                        "type": "Store<Catalog>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<overlay>\r\n  <catalog-button-container [catalogList]=\"(catalogList$|async)\" catalogButtolnList></catalog-button-container>\r\n  <cardListContainer cardList></cardListContainer>\r\n</overlay>\r\n"
        },
        {
            "name": "NavComponent",
            "id": "component-NavComponent-01e866a52f491e9f2d78bb964f550fdaf8e4ac932e95d5d18167ad8b32d8bf518089f8fa9b5a6987db4e6d2d57c116a65d9824de84c4727b1edb305eb67562e8",
            "file": "src/app/project/ui/components/nav/nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nav",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./nav.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\n\r\n@Component({\r\n  selector: 'nav',\r\n  standalone: true,\r\n  imports: [MatToolbarModule, MatButtonModule, MatIconModule],\r\n  templateUrl: './nav.component.html',\r\n  styleUrl: './nav.component.scss'\r\n})\r\nexport class NavComponent {\r\n\r\n}\r\n",
            "styleUrl": "./nav.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-toolbar>\r\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\r\n      <mat-icon>home</mat-icon>\r\n    </button>\r\n    <span>SHOP</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\r\n      <mat-icon>favorite</mat-icon>\r\n    </button>\r\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\r\n      <mat-icon>shopping_cart</mat-icon>\r\n    </button>\r\n</mat-toolbar>"
        },
        {
            "name": "NavContainerComponent",
            "id": "component-NavContainerComponent-47d523eadd7e8a298dbdda815fcdf01576882030700c49f5f500c98d433c3ba578b63aa9fd4f1be96162fec50763539829eeca84bad2b72638687c7aaeaf9da1",
            "file": "src/app/project/web/container/nav-conteiner.component/nav-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nav-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./nav-container.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NavComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { NavComponent } from '../../../ui/components/nav/nav.component';\r\n\r\n\r\n@Component({\r\n  selector: 'nav-container',\r\n  standalone: true,\r\n  imports: [\r\n    NavComponent,\r\n  ],\r\n  templateUrl: './nav-container.component.html',\r\n  styleUrl: './nav-container.component.scss'\r\n})\r\nexport class NavContainerComponent {\r\n\r\n}\r\n",
            "styleUrl": "./nav-container.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<nav></nav>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-92f4cc9cc0054ccf9d578fc1ebe06b6d7ed1424277151dbedd6cfe73ba15609d9919dcba6e9acbd021b43117d9ce1f28adf6630c681037299b01a4c726c15a8e",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HeaderComponent } from './header.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  standalone: true,\r\n  imports: [CommonModule, HeaderComponent],\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header>\r\n    <section class=\"storybook-page\">\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\n.storybook-page h2 {\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-page p {\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\n.storybook-page ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.storybook-page .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-page .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideRouter(routes), \r\n    provideClientHydration(), \r\n    provideAnimationsAsync(), \r\n    provideEffects(), \r\n    provideStore(), \r\n    provideStoreDevtools({ maxAge: 25, logOnly: !isDevMode() }),\r\n    provideState('catalog', catalogReducer),\r\n    provideState('products', productsReducer),\r\n  ]\r\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "catalogReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/web/state/catalog/catalog.reduser.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n)"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "getCatalog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/web/state/catalog/catalog.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectFeature,\r\n    (state: Catalog) => state.product\r\n)"
            },
            {
                "name": "getProductsList1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/web/state/products/products.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectFeature,\r\n    (state: Products) => state.product1\r\n)"
            },
            {
                "name": "getProductsList2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/web/state/products/products.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n    selectFeature,\r\n    (state: Products) => state.product2\r\n)"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/web/state/catalog/catalog.reduser.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Catalog",
                "defaultValue": "{\r\n  product: [\r\n    { link: 1, name: 'category1'},\r\n    { link: 2, name: 'category2'},\r\n    { link: 3, name: 'category3'},\r\n    { link: 4, name: 'category4'},\r\n  ]\r\n\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/web/state/products/products.reduser.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Products",
                "defaultValue": "{\r\n  product1: [\r\n    { id: 1, name: 'Table', cost: 12, description: 'description1', image: 'assets/img/1.jpg'},\r\n    { id: 2, name: 'Chair', cost: 12, description: 'description2', image: 'assets/img/2.jpg'},\r\n    { id: 3, name: 'prod3', cost: 12, description: 'description3', image: 'assets/img/1.jpg'},\r\n    { id: 4, name: 'prod4', cost: 12, description: 'description4', image: 'assets/img/1.jpg'},\r\n  ],\r\n\r\n  product2: [\r\n    { id: 1, name: 'Table', cost: 12, description: 'description1', image: 'assets/img/1.jpg'},\r\n    { id: 2, name: 'Chair', cost: 12, description: 'description2', image: 'assets/img/2.jpg'},\r\n    { id: 3, name: 'prod3', cost: 12, description: 'description3', image: 'assets/img/1.jpg'},\r\n    { id: 4, name: 'prod4', cost: 12, description: 'description4', image: 'assets/img/1.jpg'},\r\n  ]\r\n}"
            },
            {
                "name": "productsReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/web/state/products/products.reduser.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n)"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/web/state/catalog/catalog.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<Catalog>('catalog')"
            },
            {
                "name": "selectFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/web/state/products/products.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<Products>('products')"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering()\r\n  ]\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideRouter(routes), \r\n    provideClientHydration(), \r\n    provideAnimationsAsync(), \r\n    provideEffects(), \r\n    provideStore(), \r\n    provideStoreDevtools({ maxAge: 25, logOnly: !isDevMode() }),\r\n    provideState('catalog', catalogReducer),\r\n    provideState('products', productsReducer),\r\n  ]\r\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/project/web/state/catalog/catalog.reduser.ts": [
                {
                    "name": "catalogReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/web/state/catalog/catalog.reduser.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/web/state/catalog/catalog.reduser.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Catalog",
                    "defaultValue": "{\r\n  product: [\r\n    { link: 1, name: 'category1'},\r\n    { link: 2, name: 'category2'},\r\n    { link: 3, name: 'category3'},\r\n    { link: 4, name: 'category4'},\r\n  ]\r\n\r\n}"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering()\r\n  ]\r\n}"
                }
            ],
            "src/app/project/web/state/catalog/catalog.selector.ts": [
                {
                    "name": "getCatalog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/web/state/catalog/catalog.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectFeature,\r\n    (state: Catalog) => state.product\r\n)"
                },
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/web/state/catalog/catalog.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<Catalog>('catalog')"
                }
            ],
            "src/app/project/web/state/products/products.selector.ts": [
                {
                    "name": "getProductsList1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/web/state/products/products.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectFeature,\r\n    (state: Products) => state.product1\r\n)"
                },
                {
                    "name": "getProductsList2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/web/state/products/products.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n    selectFeature,\r\n    (state: Products) => state.product2\r\n)"
                },
                {
                    "name": "selectFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/web/state/products/products.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<Products>('products')"
                }
            ],
            "src/app/project/web/state/products/products.reduser.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/web/state/products/products.reduser.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Products",
                    "defaultValue": "{\r\n  product1: [\r\n    { id: 1, name: 'Table', cost: 12, description: 'description1', image: 'assets/img/1.jpg'},\r\n    { id: 2, name: 'Chair', cost: 12, description: 'description2', image: 'assets/img/2.jpg'},\r\n    { id: 3, name: 'prod3', cost: 12, description: 'description3', image: 'assets/img/1.jpg'},\r\n    { id: 4, name: 'prod4', cost: 12, description: 'description4', image: 'assets/img/1.jpg'},\r\n  ],\r\n\r\n  product2: [\r\n    { id: 1, name: 'Table', cost: 12, description: 'description1', image: 'assets/img/1.jpg'},\r\n    { id: 2, name: 'Chair', cost: 12, description: 'description2', image: 'assets/img/2.jpg'},\r\n    { id: 3, name: 'prod3', cost: 12, description: 'description3', image: 'assets/img/1.jpg'},\r\n    { id: 4, name: 'prod4', cost: 12, description: 'description4', image: 'assets/img/1.jpg'},\r\n  ]\r\n}"
                },
                {
                    "name": "productsReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/web/state/products/products.reduser.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n)"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/ui/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/project/ui/components/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/ui/components/nav/nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/container/card-container/card-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardListContainer",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/container/catalog-button/catalog-button-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CatalogButtonContainer",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/container/layout-container/layout-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutContainer",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/container/nav-conteiner.component/nav-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/catalog/catalog.reduser.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Catalog",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/catalog/catalog.reduser.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICatalog",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/catalog/catalog.reduser.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "catalogReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/catalog/catalog.reduser.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/catalog/catalog.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCatalog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/catalog/catalog.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/products/products.reduser.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProduct",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/products/products.reduser.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Products",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/products/products.reduser.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/products/products.reduser.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productsReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/products/products.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getProductsList1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/products/products.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getProductsList2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/web/state/products/products.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}